(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{542:function(_,v,t){_.exports=t.p+"assets/img/2022-02-18-15-02-46.f1d3bdf3.png"},543:function(_,v,t){_.exports=t.p+"assets/img/2022-02-18-15-30-16.68826775.png"},544:function(_,v,t){_.exports=t.p+"assets/img/2022-02-18-15-33-34.391630c4.png"},545:function(_,v,t){_.exports=t.p+"assets/img/2022-02-19-15-56-36.b8f42800.png"},546:function(_,v,t){_.exports=t.p+"assets/img/2022-02-19-16-03-09.b4b80e92.png"},596:function(_,v,t){"use strict";t.r(v);var e=t(12),l=Object(e.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h1",{attrs:{id:"浏览器组成核心部分-与-职责"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器组成核心部分-与-职责"}},[_._v("#")]),_._v(" 浏览器组成核心部分 与 职责")]),_._v(" "),e("ul",[e("li",[_._v("浏览器进程\n"),e("ul",[e("li",[_._v("进程管理、导航（前进、后退）、用户交互")])])]),_._v(" "),e("li",[_._v("网络进程\n"),e("ul",[e("li",[_._v("网络下载功能")])])]),_._v(" "),e("li",[_._v("渲染进程\n"),e("ul",[e("li",[_._v("通过 HTML CSS JS 渲染成可以显示和交互的页面")]),_._v(" "),e("li",[_._v("资源来自网络下载，不被信任，Chrome会让该进程运行在安全沙箱里")]),_._v(" "),e("li",[_._v("GPU 进程")])])]),_._v(" "),e("li",[_._v("插件进程")])]),_._v(" "),e("h1",{attrs:{id:"从输入内容到页面展示流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从输入内容到页面展示流程"}},[_._v("#")]),_._v(" 从输入内容到页面展示流程")]),_._v(" "),e("h2",{attrs:{id:"_1-用户输入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-用户输入"}},[_._v("#")]),_._v(" 1. 用户输入")]),_._v(" "),e("ul",[e("li",[_._v("输入文字")]),_._v(" "),e("li",[_._v("输入 URL")]),_._v(" "),e("li",[_._v("beforeunload\n"),e("ul",[e("li",[_._v("退出前会执行，可以终止导航")])])])]),_._v(" "),e("h2",{attrs:{id:"_2-网络进程-url请求过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-网络进程-url请求过程"}},[_._v("#")]),_._v(" 2. 网络进程：URL请求过程")]),_._v(" "),e("ul",[e("li",[_._v("重定向（永久重定向301/临时重定向302）\n"),e("ul",[e("li",[_._v("根据 http header 中的 location 来重定向")])])]),_._v(" "),e("li",[_._v("响应数据类型（http header: Content-Type）处理\n"),e("ul",[e("li",[_._v("text/html")]),_._v(" "),e("li",[_._v("application/octet-stream: 字节流类型，通常浏览器会按照下载类型，\n将请求提交给下载管理器；"),e("code",[_._v("URL 请求结束")])])])])]),_._v(" "),e("h2",{attrs:{id:"浏览器进程-为页面分配渲染进程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器进程-为页面分配渲染进程"}},[_._v("#")]),_._v(" 浏览器进程：为页面分配渲染进程")]),_._v(" "),e("ul",[e("li",[_._v("同一站点，复用渲染进程\n"),e("ul",[e("li",[_._v("同一站点：相同协议和根域名")]),_._v(" "),e("li",[_._v("eg: 下方三个 URL 都属于同一站点")])]),_._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v("  https://time.geekbang.org\n  https://www.geekbang.org\n  https://www.geekbang.org:8080\n")])]),_._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[_._v("1")]),e("br"),e("span",{staticClass:"line-number"},[_._v("2")]),e("br"),e("span",{staticClass:"line-number"},[_._v("3")]),e("br")])])]),_._v(" "),e("li",[_._v("不同站点，新开页面，重新分配单独的渲染进程")])]),_._v(" "),e("h2",{attrs:{id:"浏览器进程-提交文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器进程-提交文档"}},[_._v("#")]),_._v(" 浏览器进程：提交文档")]),_._v(" "),e("p",[_._v("提交文档：")]),_._v(" "),e("ul",[e("li",[_._v("大哥大("),e("code",[_._v("浏览器进程")]),_._v(")接收到小弟("),e("code",[_._v("网络进程")]),_._v(")响应头数据后，通知小弟("),e("code",[_._v("渲染进程")]),_._v(")(提交文档)，让其与网络进程建立管道通讯，")]),_._v(" "),e("li",[_._v("收到大哥大的命令，小弟("),e("code",[_._v("渲染进程")]),_._v(")赶紧与小弟（"),e("code",[_._v("网络进程")]),_._v("）建立数据管道")]),_._v(" "),e("li",[_._v("渲染进程接收完网络进程的数据后，赶紧给大哥大"),e("code",[_._v("(浏览器进程)")]),_._v("汇报（确认提交）")]),_._v(" "),e("li",[_._v("大哥大知道小弟处理好琐事了，开始做小弟们做不了的事，更新"),e("code",[_._v("浏览器界面状态")]),_._v(" "),e("ul",[e("li",[_._v("安全状态")]),_._v(" "),e("li",[_._v("地址栏 URL")]),_._v(" "),e("li",[_._v("前进后退的历史状态")]),_._v(" "),e("li",[_._v("更新 Web 页面")])])])]),_._v(" "),e("h2",{attrs:{id:"渲染进程-渲染阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染进程-渲染阶段"}},[_._v("#")]),_._v(" 渲染进程：渲染阶段")]),_._v(" "),e("ul",[e("li",[_._v("将 HTML、CSS、JS 渲染成页面")]),_._v(" "),e("li",[_._v("渲染完成后，通知"),e("code",[_._v("浏览器进程")]),_._v("，停止加载动画")])]),_._v(" "),e("p",[_._v("线程")]),_._v(" "),e("ul",[e("li",[_._v("渲染主线程")]),_._v(" "),e("li",[_._v("合成线程")])]),_._v(" "),e("h3",{attrs:{id:"渲染流水线"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染流水线"}},[_._v("#")]),_._v(" 渲染流水线")]),_._v(" "),e("ul",[e("li",[e("p",[_._v("构建 DOM 树：渲染进程根据 HTML，经由 HTML 解析器，生成 DOM")])]),_._v(" "),e("li",[e("p",[_._v("样式计算：渲染引擎根据 CSS 转换为 styleSheets（"),e("code",[_._v("document.styleSheets")]),_._v("可以获取）")]),_._v(" "),e("ol",[e("li",[_._v("将 CSS 转为浏览器能够理解的结构\n"),e("ul",[e("li",[_._v("CSS 样式主要来源\n"),e("ul",[e("li",[_._v("link 外部文件")]),_._v(" "),e("li",[_._v("<style> 标记内的 CSS")]),_._v(" "),e("li",[_._v("元素的 style 属性内嵌的 CSS")])])])])]),_._v(" "),e("li",[_._v("属性值标准化\n"),e("ul",[e("li",[_._v("em blue bold 转换标准化\n"),e("img",{attrs:{src:t(542),alt:""}})])])]),_._v(" "),e("li",[_._v("计算出 DOM 树中每个节点的具体样式\n"),e("ul",[e("li",[e("p",[_._v("CSS 的"),e("a",{attrs:{href:"https://jonny-wei.github.io/blog/css/basis/css-rule.html#%E8%A7%84%E5%88%99",target:"_blank",rel:"noopener noreferrer"}},[_._v("继承规则"),e("OutboundLink")],1)]),_._v(" "),e("p",[_._v("CSS 属性很多，但并不是所有的属性默认都是能继承父元素对应属性的，\n那哪些属性存在默认继承的行为呢？一定是那些不会影响到页面布局的属性，可以分为如下几类：")]),_._v(" "),e("ul",[e("li",[_._v("字体相关：font-family、font-style、font-size、font-weight 等")]),_._v(" "),e("li",[_._v("文本相关：text-align、text-indent、text-decoration、text-shadow、letter-spacing、word-spacing、white-space、line-height、color 等")]),_._v(" "),e("li",[_._v("列表相关：list-style、list-style-image、list-style-type、list-style-position 等")]),_._v(" "),e("li",[_._v("其他属性：visibility、cursor 等")])]),_._v(" "),e("p",[_._v("对于其他默认不继承的属性也可以通过以下几个属性值来控制继承行为：")]),_._v(" "),e("ul",[e("li",[_._v("inherit：继承父元素对应属性的计算值")]),_._v(" "),e("li",[_._v("initial：应用该属性的默认值，比如 color 的默认值是 #000")]),_._v(" "),e("li",[_._v("unset：如果属性是默认可以继承的，则取 inherit 的效果，否则同 initial")]),_._v(" "),e("li",[_._v("revert：效果等同于 unset，兼容性差")])])]),_._v(" "),e("li",[e("p",[_._v("层叠规则")])])])])])]),_._v(" "),e("li",[e("p",[_._v("布局（layout）: 根据 DOM 将布局信息保存到布局树中；布局计算；")])]),_._v(" "),e("li",[e("p",[_._v("分层（layers）: "),e("strong",[_._v("渲染引擎")]),_._v("为特定的节点生成专用的图层，\n并生成对应的图层树（LayerTree）。为了方便一些复杂的3D变换、页面滚动、或者使用z-indexing做z轴排序")]),_._v(" "),e("ul",[e("li",[_._v("布局树和图层树的关系\n"),e("img",{attrs:{src:t(543),alt:""}})]),_._v(" "),e("li",[_._v("被提升为单独的一个图层\n"),e("ol",[e("li",[_._v("拥有**"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context",target:"_blank",rel:"noopener noreferrer"}},[_._v("层叠上下文属性"),e("OutboundLink")],1),_._v("**的元素会被提升为单独的一层：\n"),e("img",{attrs:{src:t(544),alt:""}})])]),_._v(" "),e("ul",[e("li",[_._v("如果能提前知道对某个元素执行动画操作，那就最好将其标记为 "),e("code",[_._v("will-change")]),_._v("，这是告诉渲染引擎需要将该元素"),e("strong",[_._v("单独生成一个图层")])])]),_._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[_._v("需要剪裁（clip）的地方也会被创建为图层")])])])])]),_._v(" "),e("li",[e("p",[_._v("为每个图层生成"),e("code",[_._v("绘制列表")]),_._v("和"),e("code",[_._v("绘制指令")]),_._v("，并将其提交到"),e("strong",[_._v("合成线程")])]),_._v(" "),e("blockquote",[e("p",[_._v("绘制列表只是用来"),e("code",[_._v("记录绘制顺序和绘制指令的列表")]),_._v("，而实际上绘制操作是由渲染引擎中的合成线程来完成的")])])]),_._v(" "),e("li",[e("p",[_._v("栅格化(raster)操作。用户可视区域一般比"),e("code",[_._v("图层")]),_._v("小，完全渲染图层耗费性能，\n将图层划为"),e("code",[_._v("图块")]),_._v("，按照"),e("code",[_._v("视口")]),_._v("(用户看到的部分)附近的图块优先生成"),e("code",[_._v("位图")]),_._v("。所谓的栅格化，就是将"),e("code",[_._v("图块")]),_._v("转换为"),e("code",[_._v("位图")])]),_._v(" "),e("blockquote",[e("p",[_._v("渲染进程维护了一个栅格化的线程池，所有的图块栅格化都是在线程池内执行的")]),_._v(" "),e("p",[_._v("栅格化过程都会使用 GPU 来加速生成，使用 GPU 生成位图的过程叫快速栅格化，或者 GPU 栅格化，生成的位图被保存在 GPU 内存中。")])]),_._v(" "),e("p",[e("img",{attrs:{src:t(545),alt:""}})])]),_._v(" "),e("li",[e("p",[_._v("合成和显示：")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("渲染进程中的合成线程")]),_._v("将生成"),e("code",[_._v("绘制图块")]),_._v("的命令(DrawQuad)发送到"),e("code",[_._v("浏览器进程")])]),_._v(" "),e("li",[e("code",[_._v("浏览器进程")]),_._v("的"),e("code",[_._v("viz 的组件")]),_._v("执行"),e("code",[_._v("绘制图块")]),_._v("的命令(DrawQuad)，将生成的"),e("code",[_._v("图块")]),_._v("保存到"),e("code",[_._v("内存")]),_._v("中，再从"),e("code",[_._v("内存")]),_._v("显示到浏览器页面上")])])])]),_._v(" "),e("p",[e("img",{attrs:{src:t(546),alt:""}})]),_._v(" "),e("p",[_._v("参考:")]),_._v(" "),e("p",[e("a",{attrs:{href:"https://time.geekbang.org/column/article/117637",target:"_blank",rel:"noopener noreferrer"}},[_._v("04 | 导航流程：从输入URL到页面展示，这中间发生了"),e("OutboundLink")],1)]),_._v(" "),e("p",[e("a",{attrs:{href:"https://time.geekbang.org/column/article/118205",target:"_blank",rel:"noopener noreferrer"}},[_._v("05 | 渲染流程（上）：HTML、CSS和JavaScript，是如何变成页面的？"),e("OutboundLink")],1)]),_._v(" "),e("p",[e("a",{attrs:{href:"https://time.geekbang.org/column/article/118205",target:"_blank",rel:"noopener noreferrer"}},[_._v("06 | 渲染流程（下）：HTML、CSS和JavaScript，是如何变成页面的？"),e("OutboundLink")],1)])])}),[],!1,null,null,null);v.default=l.exports}}]);