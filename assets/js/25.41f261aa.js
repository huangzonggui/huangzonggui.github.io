(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{573:function(t,s,a){"use strict";a.r(s);var n=a(12),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("題目")]),t._v(" "),a("ul",[a("li",[t._v("实现 lodash _.get 方法")])]),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[t._v("JS 和 TS 的区别")]),t._v(" "),a("ul",[a("li",[t._v("TS 多出来的类型：tuple、enum、any")]),t._v(" "),a("li",[t._v("TS 是 JS 的超集，可以被编译为 JS 代码，完全兼容 JavaScript")]),t._v(" "),a("li",[t._v("JS 是基于对象的，一种脚本语言。TS 基于面向对象编程，引入了很多面相对象程序设计的特征\n（所以对于熟悉C#、Java和所有强类型语言的开发者来说，TS 容易上手），包括\n"),a("ul",[a("li",[t._v("interface 接口")]),t._v(" "),a("li",[t._v("classes 类")]),t._v(" "),a("li",[t._v("enumerated types 枚举类型")]),t._v(" "),a("li",[t._v("generics 泛型")]),t._v(" "),a("li",[t._v("modules 模块")])])]),t._v(" "),a("li",[t._v("TS 支持可选参数，JS 则不支持该特性")]),t._v(" "),a("li",[t._v("TS 支持静态类型，JS 不支持")]),t._v(" "),a("li",[t._v("TS 支持接口，JS 不支持")]),t._v(" "),a("li",[t._v("TS 在开发时编译可以知道错误，JS 错误则需要在运行时才能暴露")]),t._v(" "),a("li",[t._v("TS 作为强类型语言，可以明确知道数据类型，代码可读性强。")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("JS")]),t._v(" "),a("th",[t._v("TS")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("JS 不支持强制类型或静态类型")]),t._v(" "),a("td",[t._v("TS 支持强制类型或静态类型")])]),t._v(" "),a("tr",[a("td",[t._v("只是一种脚本语言")]),t._v(" "),a("td",[t._v("支持面相对象的编程概念，如类、接口、继承、泛型")])]),t._v(" "),a("tr",[a("td",[t._v("没有可选参数特性")]),t._v(" "),a("td",[t._v("有可选参数特性")])]),t._v(" "),a("tr",[a("td",[t._v("是解释语言，在运行的时候才会暴露错误")]),t._v(" "),a("td",[t._v("编译代码并在开发期间暴露错误")])]),t._v(" "),a("tr",[a("td",[t._v("不支持泛型")]),t._v(" "),a("td",[t._v("支持泛型")])]),t._v(" "),a("tr",[a("td",[t._v("不支持 ES6")]),t._v(" "),a("td",[t._v("支持 ES6")])]),t._v(" "),a("tr",[a("td",[t._v("不支持模块")]),t._v(" "),a("td",[t._v("支持模块？？")])]),t._v(" "),a("tr",[a("td",[t._v("number 和 string 是对象")]),t._v(" "),a("td",[t._v("number 和 string 是接口??")])])])]),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[t._v(" 泛型 ")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.tslang.cn/docs/handbook/generics.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("泛型"),a("OutboundLink")],1),t._v(" :\n在像C#和Java这样的语言中，可以使用泛型来创建可重用的组件，一个组件可以支持多种类型的数据。\n这样用户就可以以自己的数据类型来使用组件。")]),t._v(" "),a("p",[t._v("我们给identity添加了类型变量"),a("code",[t._v("T")]),t._v("。 "),a("code",[t._v("T")]),t._v("帮助我们捕获用户传入的类型（比如："),a("code",[t._v("number")]),t._v("），\n之后我们就可以使用这个类型。 之后我们再次使用了 "),a("code",[t._v("T")]),t._v("当做返回值类型。现在我们可以知道"),a("strong",[t._v("参数类型与返回值类型是相同的")]),t._v("了。")]),t._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token generic-function"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("identify")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" arg\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ul",[a("li",[t._v("泛型类")])]),t._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GenericNumber"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tzeroValue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" genericNumber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GenericNumber"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ngenericNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zeroValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\ngenericNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("genericNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("ul",[a("li",[t._v("泛型函数")]),t._v(" "),a("li",[t._v("泛型方法")]),t._v(" "),a("li",[t._v("泛型接口\n")])])])]),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[t._v("TypeScript 基本数据类型")]),t._v(" "),a("ul",[a("li",[t._v("enum 枚举")]),t._v(" "),a("li",[t._v("tuple 元组")]),t._v(" "),a("li",[t._v("never")]),t._v(" "),a("li",[t._v("void")]),t._v(" "),a("li",[t._v("boolean")]),t._v(" "),a("li",[t._v("number")]),t._v(" "),a("li",[t._v("string")]),t._v(" "),a("li",[t._v("null undefined\n"),a("ul",[a("li",[t._v("typeof null === object")])])]),t._v(" "),a("li",[t._v("array\nany\n")])])]),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[t._v(" TS 接口 有什么特性 ")]),t._v(" "),a("p",[t._v("TypeScript 原则之一是对值所具有的"),a("strong",[t._v("结构")]),t._v("进行"),a("strong",[t._v("类型检查")]),t._v("。\n接口的作用就是为这些类型命名和为你的代码或第三方代码定义"),a("strong",[t._v("契约")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("interface_name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字段声明")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法声明")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("接口只是声明方法和字段")]),t._v(" "),a("p",[t._v("特性")]),t._v(" "),a("ul",[a("li",[t._v("可选属性 ?")]),t._v(" "),a("li",[t._v("只读属性")])]),t._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Point")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ul",[a("li",[t._v("类类型")]),t._v(" "),a("li",[t._v("继承接口：一个接口可以继承多个接口")])])]),t._v(" "),a("h1",{attrs:{id:"ts-断言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ts-断言"}},[t._v("#")]),t._v(" ts 断言")]),t._v(" "),a("ul",[a("li",[t._v("尖括号类型断言: "),a("code",[t._v("<类型>变量名")])]),t._v(" "),a("li",[t._v("as 操作符 "),a("code",[t._v("变量名 as 类型")]),t._v(" "),a("ul",[a("li",[t._v("值 as 类型")])])])]),t._v(" "),a("p",[t._v("JSX")]),t._v(" "),a("p",[t._v("JSX是一种嵌入式的类似XML的语法。 它可以被转换成合法的JavaScript，\n尽管转换的语义是依据不同的实现而定的。 JSX因React框架而流行，但也存在其它的实现。\nTypeScript支持内嵌，类型检查以及将JSX直接编译为JavaScript。")]),t._v(" "),a("p",[t._v("基本用法")]),t._v(" "),a("ol",[a("li",[t._v("给文件一个 "),a("code",[t._v(".tsx")]),t._v(" 扩展名")]),t._v(" "),a("li",[t._v("启用 "),a("code",[t._v(".jsx")]),t._v(" 选项")])]),t._v(" "),a("p",[a("code",[t._v("as")]),t._v(" 操作符")]),t._v(" "),a("p",[t._v("因为TypeScript也使用尖括号来表示类型断言，在结合JSX的语法后将带来解析上的困难。\n因此，TypeScript在.tsx文件里禁用了使用尖括号的类型断言。在 "),a("code",[t._v(".tsx")]),t._v("文件里使用另一个类型断言操作符：as")]),t._v(" "),a("p",[a("code",[t._v("as")]),t._v(" 操作符与尖括号类型断言行为是等价的")]),t._v(" "),a("h1",{attrs:{id:"declare-声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#declare-声明"}},[t._v("#")]),t._v(" declare: 声明")]),t._v(" "),a("ul",[a("li",[t._v("在 ts 中使用第三方库，需要声明，否则报错\n"),a("ul",[a("li",[t._v("jQuery wx")])])]),t._v(" "),a("li",[t._v("声明文件：.d.ts")])]),t._v(" "),a("p",[t._v("https://ts.xcatliu.com/basics/declaration-files.html")]),t._v(" "),a("h1",{attrs:{id:"装饰器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#装饰器"}},[t._v("#")]),t._v(" 装饰器")]),t._v(" "),a("p",[t._v("https://segmentfault.com/a/1190000022415199\nhttps://www.tslang.cn/docs/handbook/decorators.html")]),t._v(" "),a("details",{attrs:{open:""}},[a("summary",[t._v(" ES5 和 ES6 继承有什么区别 ")]),t._v(" "),a("ul",[a("li",[t._v("写法不同，ES5 继承麻烦不直观，ES6 比较直观\n"),a("ul",[a("li",[t._v("ES5 继承是通过原型链来实现的")]),t._v(" "),a("li",[t._v("ES6 为了直观模拟 class 来继承的，本质上是也是 prototype 继承的语法糖。")])])]),t._v(" "),a("li",[t._v("ES5 不可以继承原生构造函数("),a("code",[t._v("RegExp Boolean Array Number String Object Date Function Error")]),t._v(")，ES6 可以。原因是两者实现方式不同\n"),a("ul",[a("li",[t._v("子类无法获取原生构造函数的内部属性")]),t._v(" "),a("li",[t._v("ES5 先实例化建立子类对象的"),a("code",[t._v("this")]),t._v("，再将父类属性添加到子类")]),t._v(" "),a("li",[t._v("ES6 是先新建父类的实例对象"),a("code",[t._v("this")]),t._v("，然后再用子类的构造函数修饰"),a("code",[t._v("this")])])])])]),t._v(" "),a("p",[t._v("参考：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/class-extends#%E5%8E%9F%E7%94%9F%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%9A%84%E7%BB%A7%E6%89%BF",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES6 class 继承"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/padding1015/p/15151135.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES5 ES6 继承的区别"),a("OutboundLink")],1)])]),a("p"),t._v(" "),a("h1",{attrs:{id:"如何将两个-ts-合并到一个-js-中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何将两个-ts-合并到一个-js-中"}},[t._v("#")]),t._v(" 如何将两个 TS 合并到一个 JS 中")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("tsc --outFile common.js ts1.ts ts2.ts\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ff7cee863c1d4c419b1010b0eb9dfc46~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/coderzjz/p/14235494.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeScirpt 常见题目"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);